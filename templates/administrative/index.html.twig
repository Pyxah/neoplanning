{% extends 'base.html.twig' %}

{% block title %}Gardes Administratives{% endblock %}
{% block navbar %} {{ parent() }} {% endblock %}
{% block content %}
    <div class="navbar-sec">
        <ul id="nav-sec">
            <li><a href="/">Planning Home</a></li>
            <li><a href="/gadmin">Gardes Administratives</a></li>
            <li><a href="/med">Gardes Médicales</a></li>
            <li><a href="/tech">Gardes Techniques</a></li>
            <li><a href="/soins">Gardes des Soins</a></li>
            <li><a href="/ssiad">Astreintes SSIAD</a></li>
            <li><a href="/rouvray">Garde de soins - site Le Rouvray</a></li>
        </ul>
    </div>

    <div id="calendrier">

    </div>

{% endblock %}

{% block javascripts %}
    <script>
       /* let DateTime = luxon.DateTime;
        dt = DateTime.now();
        dt.setLocale('fr').toLocaleString(DateTime.DATETIME_FULL);

        const DateTime = luxon.DateTime;
        dt = DateTime.now();
        dt.setLocale('fr').toLocaleString(DateTime.DATETIME_FULL); //=> '20 avril 2017 à 11:32 UTC−4'

        function getCalendarFormat(myDateTime, now) {
            var diff = myDateTime.diff(now.startOf("day"), 'days').as('days');
            return diff < -6 ? 'sameElse' :
                diff < -1 ? 'lastWeek' :
                diff < 0 ? 'lastDay' :
                diff < 1 ? 'sameDay' :
                diff < 2 ? 'nextDay' :
                diff < 7 ? 'nextWeek' : 'sameElse';
        }

        function myCalendar(dt1, dt2, obj){
            const format = getCalendarFormat(dt1, dt2) || 'sameElse';
            return dt1.toFormat(obj[format]);
        }

        const now = DateTime.local();
        const fmtObj = {
            sameDay: "'Aujourdhui'",
            nextDay: "'Demain'",
            nextWeek: 'EEEE',
            lastDay: "'Hier'",
            lastWeek: "'Last' EEEE",
            sameElse: 'dd/MM/yyyy'
        };

        // Some test values
        [ now,
            now.plus({days: 1}),
            now.plus({days: 4}),
            now.minus({days: 1}),
            now.minus({days: 4}),
            now.minus({days: 20}),
        ].forEach((k) => {
            console.log( myCalendar(now, k, fmtObj) );
        });

       let now = moment.locale('fr');
       let daysInMonth = moment().daysInMonth();
       let startOfMonth = moment().startOf('month');
       let startOfMonthDay = startOfMonth.getDay;

       console.log(daysInMonth);
       console.log(startOfMonth);
       console.log(startOfMonthDay);
*/
    </script>
{% endblock %}